スタックについての解説。
スタックはLIFO(Last in First out)のアルゴリズム。
最初に入れたものは一番最後に出てくる。データは必ずデータ配列の最後に追加する。
逆にデータを取り出すときもデータ配列の一番最後から取り出す。

スタックの基本動作
１.スタックにデータを追加する
スタック頂上の次の位置にデータを格納し、同時にスタック頂上を指すポインタを
1つだけ一つ進める。スタック頂上にデータを追加することを
「スタックにデータを積む/プッシュする」という。

2.スタックからデータを読み出す
スタック頂上を指すポインタの位置からデータを読み出す。

3.スタックからデータを削除する
スタック頂上を指すポインタを一つ前に戻し、スタック頂上からデータを取り除く。
これを「スタックからデータをポップする」という。
またデータの読み出しと削除は同時に行われることが多いので、
この2つをまとめてpopと呼ぶこともある。

またスタックが満杯、もしくは空の状態でpush,popすることがあるかもしれない。
空のスタックからデータを呼び出したり、削除しようとすることをスタックアンダーフローといい、
満杯の配列に対してデータを追加することをスタックオーバフローという。
これを防ぐためにスタックの状態を確認する必要がある。
この問題はスタック配列の先頭と末尾を示す2つのポインタを用意することで解決できる。
2つのポインタが一致すると動作が制限される。

また別の解決法としてリストを使う方法がある。
リストはメモリの許す限り無限にノードを追加できるのでスタックオーバフローの
心配をする必要がない。
