ツリー構造について
リスト構造のノードにおいて、次のノードを複数持てるようにしたもの。

ワード
１つ前のノード     親ノード
次のノード     　　子ノード
同じ親を持つノード　兄弟ノード
子を持たないノード　葉（leaf）
ツリー全体の根本　　根(root)

基本的な動作
1.あるノードに新しい子ノードを追加する
2.あるノードと子/親ノードの間にノードを追加する
3.葉を切り取る
4.途中のノードを切るとる
5.部分的なツリー構造を丸ごと追加したり削除したりする

2分木(binary tree)
あるノードが最大2個しか子ノードを持たない木構造。
２分木では構造体を使う。
最初に1つ用意してツリーの根にする。
その根に対して、根にデータをどんどん追加したり、
必要に応じて検索したりデータを削除する。

typedef struct _tag_tree_node {
  //このノードが保持する値
  int value;
  struct _tag_tree_node *left;
  struct _tag_tree_node *right;
} tree_node;
